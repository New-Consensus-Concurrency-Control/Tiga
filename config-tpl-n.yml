bench:
  workload: tpcc #sharded by warehouse
  scale: 1
  weight:
    new_order: 44
    payment: 44
    delivery: 4
    order_status: 4
    stock_level: 4
  population: # intial number of records in each table (per partition)
    warehouse: 1
    district: 10
    customer: 30000
    history: 30000
    order: 30000
    new_order: 9000
    item: 100000
    stock: 100000
    order_line: 300000

  coefficient: 0.5
schema: # table information
  - name: warehouse #  read-only table
    column:
      - name: w_id
        type: integer
        primary: true
      - name: w_name
        type: string
      - name: w_street_1
        type: string
      - name: w_street_2
        type: string
      - name: w_city
        type: string
      - name: w_state
        type: string
      - name: w_zip
        type: string
      - name: w_tax
        type: double
      - name: w_ytd
        type: double
  - name: district #  read-only table
    column:
      - {name: d_id, type: integer, primary: true}
      - {name: d_w_id, type: integer, primary: true, foreign: warehouse.w_id}
      - {name: d_name, type: string}
      - {name: d_street_1, type: string}
      - {name: d_street_2, type: string}
      - {name: d_city, type: string}
      - {name: d_state, type: string}
      - {name: d_zip, type: string}
      - {name: d_tax, type: double}
      - {name: d_ytd, type: double}
      - {name: d_next_o_id, type: integer}
  - name: customer
    column:
      - {name: c_id, type: integer, primary: true}
      - {name: c_d_id, type: integer, primary: true, foreign: district.d_id}
      - {name: c_w_id, type: integer, primary: true, foreign: district.d_w_id}
      - {name: c_first, type: string}
      - {name: c_middle, type: string}
      - {name: c_last, type: string}
      - {name: c_street_1, type: string}
      - {name: c_street_2, type: string}
      - {name: c_city, type: string}
      - {name: c_state, type: string}
      - {name: c_zip, type: string}
      - {name: c_phone, type: string}
      - {name: c_since, type: string}
      - {name: c_credit, type: string}
      - {name: c_credit_lim, type: double}
      - {name: c_discount, type: double}
      - {name: c_balance, type: double}
      - {name: c_ytd_payment, type: double}
      - {name: c_payment_cnt, type: integer}
      - {name: c_delivery_cnt, type: integer}
      - {name: c_data, type: string}
  - name: history
    column:
      - {name: h_key, type: integer, primary: true}
      - {name: h_c_id, type: integer, foreign: customer.c_id}
      - {name: h_c_d_id, type: integer, foreign: customer.c_d_id}
      - {name: h_c_w_id, type: integer, foreign: customer.c_w_id}
      - {name: h_d_id, type: integer, foreign: district.d_id}
      - {name: h_w_id, type: integer, foreign: district.d_w_id}
      - {name: h_date, type: string}
      - {name: h_amount, type: double}
      - {name: h_data, type: string}
  - name: order
    column:
      - {name: o_d_id, type: integer, primary: true, foreign: district.d_id}
      - {name: o_w_id, type: integer, primary: true, foreign: district.d_w_id}
      - {name: o_id, type: integer, primary: true}
      - {name: o_c_id, type: integer, foreign: customer.c_id}
      - {name: o_entry_d, type: string}
      - {name: o_carrier_id, type: integer}
      - {name: o_ol_cnt, type: integer}
      - {name: o_all_local, type: integer}
  - name: new_order
    column:
      - {name: no_d_id, type: integer, primary: true, foreign: order.o_d_id}
      - {name: no_w_id, type: integer, primary: true, foreign: order.o_w_id}
      - {name: no_o_id, type: integer, primary: true, foreign: order.o_id}
  - name: item #  read-only table
    column:
      - {name: i_id, type: integer, primary: true}
      - {name: i_im_id, type: integer}
      - {name: i_name, type: string}
      - {name: i_price, type: double}
      - {name: i_data, type: string}
  - name: stock
    column:
      - {name: s_i_id, type: integer, primary: true, foreign: item.i_id}
      - {name: s_w_id, type: integer, primary: true, foreign: warehouse.w_id}
      - {name: s_quantity, type: integer}
      - {name: s_dist_01, type: string}
      - {name: s_dist_02, type: string}
      - {name: s_dist_03, type: string}
      - {name: s_dist_04, type: string}
      - {name: s_dist_05, type: string}
      - {name: s_dist_06, type: string}
      - {name: s_dist_07, type: string}
      - {name: s_dist_08, type: string}
      - {name: s_dist_09, type: string}
      - {name: s_dist_10, type: string}
      - {name: s_ytd, type: integer}
      - {name: s_order_cnt, type: integer}
      - {name: s_remote_cnt, type: integer}
      - {name: s_data, type: string}
  - name: order_line
    column:
      - {name: ol_d_id, type: integer, primary: true, foreign: order.o_d_id}
      - {name: ol_w_id, type: integer, primary: true, foreign: order.o_w_id}
      - {name: ol_o_id, type: integer, primary: true, foreign: order.o_id}
      - {name: ol_number, type: integer, primary: true}
      - {name: ol_i_id, type: integer, foreign: stock.s_i_id}
      - {name: ol_supply_w_id, type: integer, foreign: stock.s_w_id}
      - {name: ol_delivery_d, type: string}
      - {name: ol_quantity, type: integer}
      - {name: ol_amount, type: double}
      - {name: ol_dist_info, type: string}

# sharding strategy.
# default is MOD by primary key.
# CUSTOM means strategy is defined in the code.
# TODO a better way to define sharding strategy.
sharding:
  warehouse: MOD
  district: MOD
  customer: MOD
  history: MOD
  order: MOD
  new_order: MOD
  item: MOD
  stock: MOD
  order_line: MOD


TigaInit: {cap: 400000, initBound: 60000, yieldPeriod: 10000}
#client: {rate: 5000, type: open}
client:
  type: open
  rate: 6000
  max_undone: -1
  forwarding: false
n_concurrent: 1
host:
  uiga-server-s-00-r-00: 10.142.0.12
  uiga-server-s-00-r-01: 10.166.0.10
  uiga-server-s-00-r-02: 10.158.0.11
  uiga-server-s-01-r-00: 10.142.0.13
  uiga-server-s-01-r-01: 10.166.0.11
  uiga-server-s-01-r-02: 10.158.0.12
  uiga-server-s-02-r-00: 10.142.0.14
  uiga-server-s-02-r-01: 10.166.0.12
  uiga-server-s-02-r-02: 10.158.0.13
  uiga-server-s-03-r-00: 10.142.0.15
  uiga-server-s-03-r-01: 10.166.0.13
  uiga-server-s-03-r-02: 10.158.0.14
  uiga-server-s-04-r-00: 10.142.0.16
  uiga-server-s-04-r-01: 10.166.0.14
  uiga-server-s-04-r-02: 10.158.0.15
  uiga-server-s-05-r-00: 10.142.0.17
  uiga-server-s-05-r-01: 10.166.0.15
  uiga-server-s-05-r-02: 10.158.0.16
  uiga-proxy-0000: 10.142.0.18
  uiga-proxy-0001: 10.166.0.16
  uiga-proxy-0002: 10.158.0.17
  uiga-proxy-0003: 10.142.0.19
  uiga-proxy-0004: 10.166.0.17
  uiga-proxy-0005: 10.158.0.18
  uiga-proxy-0006: 10.170.0.2
  uiga-proxy-0007: 10.170.0.3
mode: {ab: tiga, batch: false, cc: tiga, ongoing: 1, retry: 20}
process:
  uiga-server-s-00-r-00: uiga-server-s-00-r-00
  uiga-server-s-00-r-01: uiga-server-s-00-r-01
  uiga-server-s-00-r-02: uiga-server-s-00-r-02
  uiga-server-s-01-r-00: uiga-server-s-01-r-00
  uiga-server-s-01-r-01: uiga-server-s-01-r-01
  uiga-server-s-01-r-02: uiga-server-s-01-r-02
  uiga-server-s-02-r-00: uiga-server-s-02-r-00
  uiga-server-s-02-r-01: uiga-server-s-02-r-01
  uiga-server-s-02-r-02: uiga-server-s-02-r-02
  uiga-server-s-03-r-00: uiga-server-s-03-r-00
  uiga-server-s-03-r-01: uiga-server-s-03-r-01
  uiga-server-s-03-r-02: uiga-server-s-03-r-02
  uiga-server-s-04-r-00: uiga-server-s-04-r-00
  uiga-server-s-04-r-01: uiga-server-s-04-r-01
  uiga-server-s-04-r-02: uiga-server-s-04-r-02
  uiga-server-s-05-r-00: uiga-server-s-05-r-00
  uiga-server-s-05-r-01: uiga-server-s-05-r-01
  uiga-server-s-05-r-02: uiga-server-s-05-r-02
  uiga-proxy-0000: uiga-proxy-0000
  uiga-proxy-0001: uiga-proxy-0001
  uiga-proxy-0002: uiga-proxy-0002
  uiga-proxy-0003: uiga-proxy-0003
  uiga-proxy-0004: uiga-proxy-0004
  uiga-proxy-0005: uiga-proxy-0005
  uiga-proxy-0006: uiga-proxy-0006
  uiga-proxy-0007: uiga-proxy-0007
site:
  client:
    -   - uiga-proxy-0000
        - uiga-proxy-0001
        - uiga-proxy-0002
    -   - uiga-proxy-0003
        - uiga-proxy-0004
        - uiga-proxy-0005
    -   - uiga-proxy-0006
        - uiga-proxy-0007
  server: # each line is a partition (i.e., a shard), each line has 3 replicas
    -   - uiga-server-s-00-r-00:10000
        - uiga-server-s-00-r-01:10100
        - uiga-server-s-00-r-02:10200
    -   - uiga-server-s-01-r-00:10300
        - uiga-server-s-01-r-01:10400
        - uiga-server-s-01-r-02:10500
    -   - uiga-server-s-02-r-00:10600
        - uiga-server-s-02-r-01:10700
        - uiga-server-s-02-r-02:10800
    -   - uiga-server-s-03-r-00:10900
        - uiga-server-s-03-r-01:11000
        - uiga-server-s-03-r-02:11100
    -   - uiga-server-s-04-r-00:11200
        - uiga-server-s-04-r-01:11300
        - uiga-server-s-04-r-02:11400
    -   - uiga-server-s-05-r-00:11500
        - uiga-server-s-05-r-01:11600
        - uiga-server-s-05-r-02:11700
server_initial_bound:
  - 60000
  - 100000
  - 100000
server_bound_cap:
  - 400000
  - 400000
  - 400000
designate_replica_id:
  - 0
  - 1
  - 2
  - 0
  - 1
  - 2
clockOffset:
  mean: 0
  std: 0
spec_exec: false

nezha-recorder: 127.0.0.1:41237

owdDeltaUs: 10000
test_failure_recovery: false
synced_logid_before_failure: 600000
clock_approach: cwcs
preventive: true
owd_delta_us: 10000
owd_estimate_percentile: 50
